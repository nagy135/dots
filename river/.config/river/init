#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Use the "logo" key as the primary modifier
mod="Mod4"

terminal="foot"
chrome="google-chrome-stable"

# Mod+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)

# spawn binds {{{

riverctl map normal $mod Return spawn "$terminal"
riverctl map normal $mod Q spawn "qutebrowser"
riverctl map normal $mod+Shift Q spawn "MOZ_ENABLE_WAYLAND=1 firefox"
riverctl map normal $mod C spawn "$chrome"
riverctl map normal $mod+Control C spawn "$chrome --incognito"
riverctl map normal $mod D spawn "fuzzel -b 0b0b0bdd -t b2d3d9ff -s 19a85bff -S 0b0b0bff -m f9dc2bff -C 19a85bff -B 2"
riverctl map normal $mod R spawn "$terminal vifm"
riverctl map normal $mod A spawn "mpv_history"
riverctl map normal $mod M spawn "spotify_run"
riverctl map normal $mod+Control A spawn "mpv_history --clipboard"
riverctl map normal $mod+Shift A spawn "mpv_history --qutebrowser"
riverctl map normal $mod+Mod1 A spawn "mpv_history --chrome"
riverctl map normal $mod+Mod1 C spawn "color"
riverctl map normal $mod Z spawn "filer ~/Downloads"
riverctl map normal $mod+Control Z spawn "filer ~/Downloads clip"

# Downloads/*.torrent start downloading
riverctl map normal $mod T spawn tsm-add
riverctl map normal $mod+Shift T spawn "tsm-clean"

# subtube
riverctl map normal $mod Y spawn "subtube play"
riverctl map normal $mod+Shift Y spawn "MOZ_ENABLE_WAYLAND=1 subtube play -h firefox"
riverctl map normal $mod F5 spawn "subtube update"

# tmux controller
riverctl map normal $mod E spawn "tmux_controller list"
riverctl map normal $mod+Control E spawn "tmux_controller create"
riverctl map normal $mod+Shift E spawn "tmux_controller kill"

# tabber
riverctl map normal $mod+Control G spawn "tabber grab"
riverctl map normal $mod+Mod1 G spawn "tabber"
riverctl map normal $mod+Mod1+Control G spawn "tabber process"

# set bg
riverctl map normal $mod+Control B spawn 'killall swaybg ; swaybg -i ~/Pictures/current_wallpaper &'

# (re)start waybar
riverctl map normal $mod+Mod1 B spawn 'killall waybar ; waybar &'
# }}}

# dunst {{{

riverctl map normal Control Grave spawn "dunstctl history-pop"
riverctl map normal Control Space spawn "dunstctl close"
riverctl map normal Control+Shift Space spawn "dunstctl close-all"
riverctl map normal Control+Mod1 Space spawn "dunstctl set-paused toggle"

# }}}

# PrintScreen {{{
riverctl map normal None Print spawn "screenshotter"
riverctl map normal $mod+Control Print spawn "screenshotter -zone"
riverctl map normal $mod Print spawn "screenshotter -save"
# }}}

# Lock screen
riverctl map normal $mod Delete "swaylock --clock"

# Mod+Q to close the focused view
riverctl map normal $mod X close

# Mod+E to exit river
riverctl map normal $mod+Mod1 E exit

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

riverctl map normal $mod N focus-view next
riverctl map normal $mod+Shift N focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Space zoom

# Mod+H and Mod+L to decrease/increase the main_factor value of rivertile by 0.05
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main_count value of rivertile.
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

# Mod+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Mod1 H move left 100
riverctl map normal $mod+Mod1 J move down 100
riverctl map normal $mod+Mod1 K move up 100
riverctl map normal $mod+Mod1 L move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Mod1+Control H snap left
riverctl map normal $mod+Mod1+Control J snap down
riverctl map normal $mod+Mod1+Control K snap up
riverctl map normal $mod+Mod1+Control L snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal $mod+Mod1+Shift H resize horizontal -100
riverctl map normal $mod+Mod1+Shift J resize vertical 100
riverctl map normal $mod+Mod1+Shift K resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Mod+Space to toggle float
riverctl map normal $mod S toggle-float

# Mod+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    set-layout-value rivertile string main_location top
riverctl map normal $mod Right set-layout-value rivertile string main_location right
riverctl map normal $mod Down  set-layout-value rivertile string main_location bottom
riverctl map normal $mod Left  set-layout-value rivertile string main_location left

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Select previously selected binds
riverctl map normal $mod Grave focus-previous-tags

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive
    # riverctl map $mode None XF86Eject spawn "eject -T"

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn "pamixer -i 5"
    riverctl map $mode None XF86AudioLowerVolume  spawn "pamixer -d 5"
    riverctl map $mode None XF86AudioMute         spawn "pamixer --toggle-mute"

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn "playerctl play-pause"
    riverctl map $mode None XF86AudioPlay  spawn "playerctl play-pause"
    riverctl map $mode None XF86AudioPrev  spawn "playerctl previous"
    riverctl map $mode None XF86AudioNext  spawn "playerctl next"

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn "light -A 10"
    riverctl map $mode None XF86MonBrightnessDown spawn "light -U 10"
done

# Set repeat rate
riverctl set-repeat 35 200

# Touchpad setup {{{

# name can be found via:
# riverctl list-inputs (copy whole line!)
riverctl input 2:7:SynPS/2_Synaptics_TouchPad tap enabled
riverctl input 2:7:SynPS/2_Synaptics_TouchPad natural-scroll disabled

# }}}

# Set app-ids of views which should float
riverctl float-filter-add "float"
riverctl float-filter-add "popup"

# Set app-ids of views which should use client side decorations
riverctl csd-filter-add "gedit"

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile

# scratchpad {{{

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20 ))

# Toggle the scratchpad with Super+P
riverctl map normal $mod+Control Return toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal $mod+Mod1 Return set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}
# }}}

# customizations {{{

riverctl border-width 3
riverctl border-color-focused 0xC22330
riverctl background-color 0x0b0b0b

# }}}

# notification daemon
dunst &

# top bar (with restart on exec)
killall waybar ; waybar &

# audio
pulseaudio -D &

# set wallpaper
swaybg -i ~/Pictures/current_wallpaper &

# inactivity
swayidle -w \
    timeout 3000 'notify-send -u critical "Inactivity" "Screen dim in 10 minutes"' \
    timeout 3600 'light -S 0' &

exec rivertile
