#!/bin/sh

mod="Mod4" # super

terminal="alacritty"
chrome="google-chrome-stable"

### Spawn terminal
riverctl map normal $mod Return spawn "$terminal"

# Browsers {{{

### Gist: clipboard => gist with content as a link in clipboard
riverctl map normal $mod I spawn "gist"

### Json prettify: json in clipboard => prettified json in clipboard
riverctl map normal $mod+Shift I spawn "prettify_json"

### Toggle screen capture in zone
riverctl map normal $mod P spawn "wayland_screen_record"

### Spawn qutebrowser
riverctl map normal $mod Q spawn "qutebrowser"

### Quickqute (qutebrowser custom quick menu)
riverctl map normal $mod+Mod1 Q spawn "quickqute"

### Spawn firefox
riverctl map normal $mod+Shift Q spawn "firefox"

### Spawn chrome
riverctl map normal $mod C spawn "$chrome"

### Spawn chrome --incognito
riverctl map normal $mod+Control C spawn "$chrome --incognito"

# }}}

### HELP: Description => Bind
riverctl map normal $mod V spawn "river_binds -d"

### HELP: Bind => Description
riverctl map normal $mod+Shift V spawn "river_binds -b"

### Fuzzel dmenu_run
riverctl map normal $mod D spawn "fuzzel -b 0b0b0bdd -t b2d3d9ff -s 19a85bff -S 0b0b0bff -m f9dc2bff -C 19a85bff -B 2"

### Spawn vifm
riverctl map normal $mod R spawn "$terminal -e vifm"

### Spawn htop
riverctl map normal $mod Equal spawn "$terminal -e htop"

# Mpv_history {{{

### Spawn mpv_history
riverctl map normal $mod A spawn "mpv_history"

### Spawn mpv_history to clipboard
riverctl map normal $mod+Control A spawn "mpv_history --clipboard"

### Spawn mpv_history (open in qutebrowser)
riverctl map normal $mod+Shift A spawn "mpv_history --handler qutebrowser"

### Spawn mpv_history (open in chrome)
riverctl map normal $mod+Mod1 A spawn "mpv_history --handler $chrome"

# }}}

### Spawn spotify on its workspace (or focus)
riverctl map normal $mod M spawn "spotify_run"

### Pick my color theme to clipboard
riverctl map normal $mod+Mod1 C spawn "color"

# Filer {{{

### Filer (open downloads)
riverctl map normal $mod Z spawn "filer ~/Downloads"

### Filer (clipboard downloads)
riverctl map normal $mod+Control Z spawn "filer ~/Downloads clip"

# }}}

### Bye prompt
riverctl map normal $mod B spawn "bye_prompt"

# Redshift {{{

### Redshift night
riverctl map normal $mod bracketleft   spawn "redshift -P -O 2300"

### Redshift disable
riverctl map normal $mod bracketright spawn "killall redshift"

# }}}

# Transmission {{{

### Add torrent from downloads to transmission
riverctl map normal $mod T spawn tsm-add

### Remove torrent that is seeding (fuzzel picker)
riverctl map normal $mod+Shift T spawn "tsm-clean"

# }}}

# Subtube {{{

### Subtube play
riverctl map normal $mod Y spawn "subtube play"

### Subtube play (in firefox)
riverctl map normal $mod+Shift Y spawn "subtube play -h firefox"

### Subtube update
riverctl map normal $mod F5 spawn "subtube update"

# }}}

# Tmux controller {{{

### Tmux controller list
riverctl map normal $mod+Shift E spawn "tmux_controller list"

### Tmux controller create
riverctl map normal $mod+Control+Shift E spawn "tmux_controller create"

### Tmux controller kill
riverctl map normal $mod+Control E spawn "tmux_controller kill"

# }}}

# Tabber {{{

### Tabber grab
riverctl map normal $mod+Control G spawn "tabber grab"

### Tabber init
riverctl map normal $mod+Mod1 G spawn "tabber"

### Tabber process
riverctl map normal $mod+Mod1+Control G spawn "tabber process"

# }}}

### Reset bg (paint current_wallpaper)
riverctl map normal $mod+Control B spawn 'killall swaybg ; swaybg -i ~/Pictures/current_wallpaper &'

### (re)start waybar
riverctl map normal $mod+Mod1 B spawn 'killall waybar ; waybar &'

# Notification {{{

# riverctl map normal Control Grave spawn "makoctl restore"
# riverctl map normal Control Space spawn "makoctl dismiss"
# riverctl map normal Control+Shift Space spawn "makoctl dismiss -a"

### Dunst history
riverctl map normal Control Grave spawn "dunstctl history-pop"

### Dunst close
riverctl map normal Control Space spawn "dunstctl close"

### Dunst close-all
riverctl map normal Control+Shift Space spawn "dunstctl close-all"

### Dunst toggle pause
riverctl map normal Control+Mod1 Space spawn "dunstctl set-paused toggle"

# riverctl map normal Control+Mod1 Space spawn "dunstctl set-paused toggle"

# }}}

# PrintScreen {{{

### Screenshot whole screen
riverctl map normal None Print spawn "screenshotter"

### Screenshot zone
riverctl map normal $mod+Control Print spawn "screenshotter -zone"

### Screenshot save
riverctl map normal $mod Print spawn "screenshotter -save"

# }}}

### Toggle nm-applet (wifi)
riverctl map normal $mod+Control W "wifi_control_toggle"

### Lock screen
riverctl map normal $mod Delete "swaylock --clock"

### Close focused view
riverctl map normal $mod X close

### Exit river
riverctl map normal $mod+Mod1 E exit

# Change focus next/previous {{{
### Focus next view
riverctl map normal $mod J focus-view next

### Focus previous view
riverctl map normal $mod K focus-view previous

### Focus next view
riverctl map normal $mod N focus-view next

### Focus previous view
riverctl map normal $mod+Shift N focus-view previous

# }}}

### Swap with next view
riverctl map normal $mod+Shift J swap next

### Swap with previous view
riverctl map normal $mod+Shift K swap previous

# Output {{{

### Focus next output
riverctl map normal $mod Period focus-output next

### Focus previous output
riverctl map normal $mod Comma focus-output previous

### Send to next output
riverctl map normal $mod+Shift Period send-to-output next

### Send to previous output
riverctl map normal $mod+Shift Comma send-to-output previous

# }}}

### Zoom (top of stack)
riverctl map normal $mod Space zoom

# Main area ratio {{{

### Decrease main area ratio by 5%
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.05"

### Increase main area ratio by 5%
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

### Increase main area count by 1
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-count +1"

### Decrease main area count by 1
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

# }}}

# Floating move {{{

### Floating move left
riverctl map normal $mod+Mod1 H move left 100

### Floating move down
riverctl map normal $mod+Mod1 J move down 100

### Floating move up
riverctl map normal $mod+Mod1 K move up 100

### Floating move right
riverctl map normal $mod+Mod1 L move right 100

# }}}

# Snap floating view to wall {{{

### Snap floating view left
riverctl map normal $mod+Mod1+Control H snap left

### Snap floating view down
riverctl map normal $mod+Mod1+Control J snap down

### Snap floating view up
riverctl map normal $mod+Mod1+Control K snap up

### Snap floating view right
riverctl map normal $mod+Mod1+Control L snap right

# }}}

# Resize views {{{

### Resize view horizontal -100
riverctl map normal $mod+Mod1+Shift H resize horizontal -100

### Resize view vertical -100
riverctl map normal $mod+Mod1+Shift J resize vertical -100

### Resize view vertical +100
riverctl map normal $mod+Mod1+Shift K resize vertical 100

### Resize view horizontal +100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# }}}

### Move view
riverctl map-pointer normal $mod BTN_LEFT move-view

### Resize view
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    ### Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    ### Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    ### Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    ### Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# All tags {{{
all_tags=$(((1 << 32) - 1))

### Focus all tags
riverctl map normal $mod 0 set-focused-tags $all_tags

### Tag focused view with all tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# }}}

### Toggle float
riverctl map normal $mod S toggle-float

### Toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# Layout orientation {{{

### Layout orientation top
riverctl map normal $mod Up    set-layout-value rivertile string main_location top

### Layout orientation right
riverctl map normal $mod Right set-layout-value rivertile string main_location right

### Layout orientation bottom
riverctl map normal $mod Down  set-layout-value rivertile string main_location bottom

### Layout orientation left
riverctl map normal $mod Left  set-layout-value rivertile string main_location left

# }}}

# Passthrough {{{

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

### Enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

### Return from passthrough to normal
riverctl map passthrough $mod F11 enter-mode normal

# }}}

### Focus previously selected tags
riverctl map normal $mod Grave focus-previous-tags

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive
    # riverctl map $mode None XF86Eject spawn "eject -T"

    # Volume {{{

    ### Volume up 5%
    riverctl map $mode None XF86AudioRaiseVolume  spawn "pamixer -i 5"

    ### Volume down 5%
    riverctl map $mode None XF86AudioLowerVolume  spawn "pamixer -d 5"

    ### Volume mute
    riverctl map $mode None XF86AudioMute         spawn "pamixer --toggle-mute"

    # }}}

    # Playerctl {{{

    ### Playerctl toggle play
    riverctl map $mode None XF86AudioMedia spawn "playerctl play-pause"

    ### Playerctl toggle play
    riverctl map $mode None XF86AudioPlay  spawn "playerctl play-pause"
    
    ### Playerctl previous
    riverctl map $mode None XF86AudioPrev  spawn "playerctl previous"

    ### Playerctl next
    riverctl map $mode None XF86AudioNext  spawn "playerctl next"

    # }}}

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)

    ### Brightness up 10%
    riverctl map $mode None XF86MonBrightnessUp   spawn "light -A 10"

    ### Brightness down 10%
    riverctl map $mode None XF86MonBrightnessDown spawn "light -U 10"
done

# Set repeat rate
riverctl set-repeat 35 200

# Touchpad setup {{{

# name can be found via:
# riverctl list-inputs (copy whole line!)
riverctl input 2:7:SynPS/2_Synaptics_TouchPad tap enabled
riverctl input 2:7:SynPS/2_Synaptics_TouchPad natural-scroll disabled

# }}}

# Set app-ids of views which should float
riverctl float-filter-add "float"
riverctl float-filter-add "popup"

# Set app-ids of views which should use client side decorations
riverctl csd-filter-add "gedit"

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile

# Scratchpad {{{

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20 ))

### Toggle the scratchpad
riverctl map normal $mod+Control Return toggle-focused-tags ${scratch_tag}

### Send view to the scratchpad
riverctl map normal $mod+Mod1 Return set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# }}}

# customizations {{{

riverctl border-width 3
riverctl border-color-focused 0xC22330
riverctl background-color 0x0b0b0b

# }}}

# notification daemon
# mako &
dunst &

# top bar (with restart on exec)
killall waybar ; waybar &

# audio
pulseaudio -D &

# set wallpaper
swaybg -i ~/Pictures/current_wallpaper &

# inactivity
swayidle -w \
    timeout 3000 'notify-send -u critical "Inactivity" "Screen dim in 10 minutes"' \
    timeout 3600 'light -S 0' &

exec rivertile
