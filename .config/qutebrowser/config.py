
#  ██████╗ ██╗   ██╗████████╗███████╗
# ██╔═══██╗██║   ██║╚══██╔══╝██╔════╝
# ██║   ██║██║   ██║   ██║   █████╗
# ██║▄▄ ██║██║   ██║   ██║   ██╔══╝
# ╚██████╔╝╚██████╔╝   ██║   ███████╗
#  ╚══▀▀═╝  ╚═════╝    ╚═╝   ╚══════╝


# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configu#e52929 via autoconfig.yml
# config.load_autoconfig()

# Aliases for commands. The keys of the given dictionary are the
# aliases, while the values are the commands they map to.
# Type: Dict
c.aliases = {
        'w': 'session-save',
        'q': 'quit',
        'wq': 'quit --save',
        'pypa': 'spawn pypass print -d --clip --masterpass '
        }

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Editor (and arguments) to use for the `open-editor` command. The
# following placeholders are defined: * `{file}`: Filename of the file
# to be edited. * `{line}`: Line in which the caret is found in the
# text. * `{column}`: Column in which the caret is found in the text. *
# `{line0}`: Same as `{line}`, but starting from index 0. * `{column0}`:
# Same as `{column}`, but starting from index 0.
# Type: ShellCommand
c.editor.command = ['alacritty', '-e', 'nvim', '{file}']

# CSS border value for hints.
# Type: String
c.hints.border = '2px solid #000000'

# Characters used for hint strings.
# Type: UniqueCharString
c.hints.chars = 'fjdkslaghtyrueiwqpvbcnxmz'

# Make characters in hint strings uppercase.
# Type: Bool
c.hints.uppercase = True

# Enable smooth scrolling for web pages. Note smooth scrolling does not
# work with the `:scroll-px` command.
# Type: Bool
c.scrolling.smooth = False

# Padding (in pixels) around text for tabs.
# Type: Padding
c.tabs.padding = {'top': 10, 'bottom': 10, 'left': 10, 'right': 10}

# Search engines which can be used via the address bar. Maps a search
# engine name (such as `DEFAULT`, or `ddg`) to a URL with a `{}`
# placeholder. The placeholder will be replaced by the search term, use
# `{{` and `}}` for literal `{`/`}` signs. The search engine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was ente#e52929 to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'duck': 'https://duckduckgo.com/?q={}&ia=web', 'DEFAULT': 'https://www.google.sk/search?q={}', 'archrepo': 'https://www.archlinux.org/packages/?q={}', 'you': 'https://www.youtube.com/results?search_query={}&page=&utm_source=opensearch', 'tw': 'http://www.twitch.tv/{}'}

# Page(s) to open at the start.
# Type: List of FuzzyUrl, or FuzzyUrl
c.url.start_pages = ['file:///home/infiniter/.config/qutebrowser/homepage/index.html']
c.url.default_page = 'file:///home/infiniter/.config/qutebrowser/homepage/index.html'

c.tabs.title.format = "{index}: {current_title}"

c.tabs.indicator.width = 0

# Font color for the matched part of hints.
# Type: QssColor
c.colors.hints.match.fg = '#e52929'

# Foreground color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.fg = '#b2d3d9'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#0b0b0b'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#000000'

c.colors.tabs.even.fg = '#b2d3d9'

# Foreground color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.fg = '#0b0b0b'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = '#19a85b'

# Foreground color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.fg = '#0b0b0b'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = '#19a85b'

c.colors.statusbar.url.success.http.fg = "#f9dc2b"

c.colors.statusbar.url.success.https.fg = "#f9dc2b"

# Font used for the hints.
# Type: Font
c.fonts.hints = 'bold 12pt League Mono Bold'

# hud font
c.fonts.completion.entry = '12pt League Mono'

# hud categories font
c.fonts.completion.category = 'bold 13pt League Mono'

# font used in statusbar
c.fonts.statusbar = '13pt League Mono'

# font used in download bar
c.fonts.downloads = '12pt League Mono'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = 'bold 11pt League Mono'

c.colors.completion.category.bg = "#19a85b"

c.colors.completion.category.fg = "#0b0b0b"

c.colors.completion.even.bg = "#222222"

c.colors.completion.odd.bg = "#000000"

c.colors.completion.item.selected.bg = "#f9dc2b"

c.colors.completion.item.selected.fg = "#000000"

# Bindings for normal mode
config.bind('J', 'tab-prev')
config.bind('K', 'tab-next')
config.bind('<Ctrl-z>', 'tab-next')
# MPV binds
config.bind(';;c', 'hint links spawn chromium {hint-url}')
config.bind(';;C', 'spawn chromium {hint-url}')
config.bind(';;m', 'hint links spawn mpv {hint-url}')
config.bind(';;M', 'spawn mpv {url}')
config.bind('m', 'hint links userscript myscript')
config.bind('b', 'hint links userscript open_download')
config.bind('M', 'spawn --userscript myscript')
config.bind(';M', 'hint --rapid links spawn umpv {hint-url}')

# config.bind('m', 'hint links spawn youtube-viewer --resolution=720p --player=mpv {hint-url}')
# config.bind('M', 'spawn youtube-viewer --resolution=720p --player=mpv {url}')

config.bind('tt', 'spawn twitch -qt {url}')
config.bind('tT', 'hint links spawn twitch -qt {hint-url}')

config.bind('e', 'edit-url')
config.bind('cc', 'hint links yank')

config.bind('X', 'undo')
config.bind('d', 'scroll-page 0 0.5')
config.bind('j', 'scroll-page 0 0.1')
# config.bind('gi', 'hint inputs -m number ;; later 20 fake-key --global 0')
config.bind('u', 'scroll-page 0 -0.5')
config.bind('k', 'scroll-page 0 -0.1')
config.bind('x', 'tab-close')
config.bind('z', 'tab-close -p')
config.bind('yt', 'tab-clone')
config.bind('gy', 'open -t https://www.youtube.com')
config.bind('gt', 'open -t https://www.twitch.tv/directory/game/League%20of%20Legends')
config.bind('gf', 'open -t https://www.facebook.com/messages/')
config.bind('go', 'open -t https://yts.ag/')
# config.bind('gn', 'jseval -q document.getElementsByClassName("_4sp8")[0].style.backgroundColor = "#000000"; document.getElementsByClassName("_1mf _1mj")[0].style.color = "#FFFFFF"') # facebook black chat 'GoNight'
config.bind('gm', 'open -t https://www.gmail.com')
config.bind('gs', 'open -t https://www.youtube.com/user/EpicSkillshot/videos')
config.bind('gh', 'history -t')
config.bind('gY', 'open https://www.youtube.com')
config.bind('gT', 'open https://www.twitch.tv/directory/game/League%20of%20Legends')
config.bind('gF', 'open https://www.facebook.com/messages/')
config.bind('gM', 'open https://www.gmail.com')
config.bind('gS', 'open https://www.youtube.com/user/EpicSkillshot/videos')
config.bind('gO', 'open https://yts.ag/')
config.bind('gH', 'history')
config.bind('gn', 'enter-mode insert ;; jseval -q document.getElementsByClassName("_1mf _1mj")[0].click()')
config.bind('gv', 'jseval -q (function contains(selector, text) { var elements = document.querySelectorAll(selector); return Array.prototype.filter.call(elements, function(element){ return RegExp(text).test(element.textContent); }); })("div.tab-content", "Videá")[0].click()')
config.bind('E', 'edit-url -t')
config.bind('ws', 'view-source')
config.bind(';p', 'enter-mode passthrough')
config.bind(';p', 'leave-mode', mode='passthrough')
config.bind('<Ctrl-V>', 'enter-mode insert', mode='normal')
config.bind('gd', 'tab-give')
config.bind(';m', 'hint inputs ;; jseval -q document.activeElement.value = "viktor.nagy1995@gmail.com" ;; enter-mode normal', mode="normal")
config.bind('gs', 'jseval -q document.getElementsByClassName("rc")[0].firstChild.firstChild.click()', mode="normal")
# config.bind(';m', 'hint inputs ', mode="normal")


config.bind('<Ctrl-h>', 'home', mode='normal')
config.bind('<Ctrl-s>', 'config-source')
config.bind('<Ctrl-m>', 'insert-text viktor.nagy1995@gmail.com', mode='insert')
config.bind('<Ctrl-m>', 'enter-mode insert ;; insert-text viktor.nagy1995@gmail.com', mode='normal')

# Bindings for insert mode
config.bind('<Escape>', 'leave-mode ;; jseval -q document.activeElement.blur();window.focus();', mode='insert')

config.bind('<Ctrl-j>', 'fake-key <Down>', mode="insert")
config.bind('<Ctrl-j>', 'fake-key <Down>', mode="normal")
config.bind('<Ctrl-k>', 'fake-key <Up>', mode="insert")
config.bind('<Ctrl-k>', 'fake-key <Up>', mode="normal")
config.bind('<Ctrl-j>', 'completion-item-focus next', mode='command')
config.bind('<Ctrl-k>', 'completion-item-focus prev', mode='command')
config.bind('<Ctrl-n>', 'fake-key <Down>', mode="insert")
config.bind('<Ctrl-n>', 'fake-key <Down>', mode="normal")
config.bind('<Ctrl-p>', 'fake-key <Up>', mode="insert")
config.bind('<Ctrl-p>', 'fake-key <Up>', mode="normal")
config.bind('<Ctrl-n>', 'completion-item-focus next', mode='command')
config.bind('<Ctrl-p>', 'completion-item-focus prev', mode='command')

config.bind('<tab>', 'nop', mode="normal")
